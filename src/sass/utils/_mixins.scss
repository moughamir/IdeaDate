// Font Size
// source: https://medium.com/@justinbrazeau/10-useful-sass-mixins-for-automation-833cdee9d69b
@function calculateRem($size) {
  $remSize: $size / 16px;
  @return $remSize * 1rem;
}

@mixin font-size($size) {
  font-size: $size;
  font-size: calculateRem($size);
}

// MQ
//source: https://github.com/alsacreations/KNACSS/blob/master/doc/07-responsive.md#mixins-alias
//$small: 544px;
$small : 768px;
$medium : 1024px;
$large : 1200px;
$extra-large : 1440px;
@function breakpoint($bp) {
  @if $bp=='mobile' {
    @return '(max-width: #{$small})';
  } @else if $bp=='portrait' {
    @return '(min-width: #{$small + 1}) and (max-width: #{$small})';
  } @else if $bp=='landscape' {
    @return '(min-width: #{$small + 1}) and (max-width: #{$medium})';
  } @else if $bp=='desktop' {
    @return '(min-width: #{$medium + 1})';
  } @else if $bp=='portrait-down' {
    @return '(max-width: #{$small})';
  } @else if $bp=='portrait-up' {
    @return '(min-width: #{$small + 1})';
  } @else if $bp=='landscape-down' {
    @return '(max-width: #{$medium})';
  } @else if $bp=='landscape-up' {
    @return '(min-width: #{$small + 1})';
  } @else if $bp=='retina' {
    @return '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)';
  }
}

@mixin respond-to($value) {
  $string : breakpoint($value);
  @media screen and #{$string} {
    @content;
  }
}

// Size

@mixin size($w, $h) {
  width  : $w;
  height : $h;
}

@mixin square($size) {
  @include size($size, $size);
}

// Icons
@function icon($name){
  @return $assets + 'ico-' + $name + '.png';
}